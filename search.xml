<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[解决迅雷下载出现 敏感资源 的问题]]></title>
    <url>%2Fblog%2F2018%2F12%2F31%2F%E8%A7%A3%E5%86%B3%E8%BF%85%E9%9B%B7%E4%B8%8B%E8%BD%BD%E5%87%BA%E7%8E%B0-%E6%95%8F%E6%84%9F%E8%B5%84%E6%BA%90-%E7%9A%84%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[使用高版本的迅雷下载 小电影 的时候，经常会出现 敏感资源 或者 应版权方要求。而种子洗白的方法虽然可用，但是经常速度为0。那么本篇文章将会介绍一个新的方法，使迅雷能够正常下载出现以上两种提示的文件。 开始操作 可能用到的文件： 下载 提取码：e489 其实这个方法，就是使用老版本的 迅雷5 。 下载完后，按照提示安装，之后打开即可。 迅雷5所拥有的优点： 和高版本的迅雷速度相比，几乎没什么差别。 轻量化，无广告。 没有恶心人的会员加速制度。 如图， 迅雷5 可轻松下载敏感资源并保持了较高的速度(2.2Mb/s)。 下载磁力链接文件迅雷5 虽好，但是它却有一个缺点：不支持磁力链接。 其实这个问题非常好解决，只要访问 这个网站 即可将磁力链接转换为种子文件，让 迅雷5 也能够下载。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>实用教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[解决Origin平台下载速度问题]]></title>
    <url>%2Fblog%2F2018%2F12%2F31%2F%E8%A7%A3%E5%86%B3Origin%E5%B9%B3%E5%8F%B0%E4%B8%8B%E8%BD%BD%E9%80%9F%E5%BA%A6%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[由于众所周知的原因，Origin平台在国内的下载速度一直是惨不忍睹的，那么除了使用加速器加速平台外，还有没有什么方法呢？ 可能会用到的工具： Origin 游戏下载CDN切换 UsbEAm Hosts Editor [多平台hosts修改] 修改CDN首先，在确保Origin退出的情况下，打开 Origin 游戏下载CDN切换 。 打开后，出现上图界面。接下来，选择 Akamai (推荐) ，单击 应用 按钮即可。 原理：Origin平台在国内默认使用Lv3 CDN，导致速度异常缓慢，本工具可以修改Origin根目录下的 EACore.ini 文件，让Origin使用Akamai CDN进行下载，达到提高下载速度的目的。 单击 应用 按钮后，打开Origin平台，进行测试，如下载速度还是缓慢，则可以使用下面的方法。 修改Hosts同样，在确保Origin退出的情况下，打开 UsbEAm Hosts Editor [多平台hosts修改] 。 打开后，出现上图界面。接下来，在窗口任意位置单击 鼠标右键 ，出现菜单。 在菜单中选择 Origin - 艺电游戏平台 ---&gt; 游戏下载 [akamai-CDN]。 在主界面，单击 检测延迟 ，检测完毕后，选中列表框第一位，单击 应用选中 即可。 原理：修改Hosts覆盖掉DNS解析内容，把Origin下载服务器更改到速度较快的服务器。 单击 应用选中 按钮后，即可打开Origin平台，享受高速下载。]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>实用教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在网页中插入BILIBILI HTML5播放器]]></title>
    <url>%2Fblog%2F2018%2F12%2F31%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E7%BD%91%E9%A1%B5%E4%B8%AD%E6%8F%92%E5%85%A5BILIBILI-HTML5%E6%92%AD%E6%94%BE%E5%99%A8%2F</url>
    <content type="text"><![CDATA[当我们想要在网页中插入视频的时候，第一个想到的肯定是 &lt;video&gt; 标签，然而Video标签却有几个缺点。 视频资源从本地服务器读取。 耗费流量巨大。 下载速度缓慢。 原生的界面简直丑爆了好吗，要花费大量时间美化。 众所周知 BILIBILI[下文称”B站”]是一个非常优秀的视频网站。那么，如何将B站的播放器引用到网页里面呢？ 引用B站播放器只需要一小段代码：1&lt;iframe id=sbrxp src=&quot;//player.bilibili.com/player.html?aid=33773737&amp;cid=18527724&amp;page=1&quot; scrolling=&quot;no&quot; border=&quot;0&quot; frameborder=&quot;no&quot; framespacing=&quot;0&quot; allowfullscreen=&quot;true&quot; style=&quot;width: 640px; height: 430px; max-width: 100%&quot;&gt; &lt;/iframe&gt; 其中：1//player.bilibili.com/player.html?aid=33773737&amp;cid=18527724&amp;page=1 将 aid=33773737 等号后面的数字改为你视频的AV号。而cid经过测试，不需要修改也可以正常播放。 修改完后，将这段代码插入到想要显示播放器的代码处，即可显示B站播放器。]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>实用教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[记事本播放Badapple]]></title>
    <url>%2Fblog%2F2018%2F12%2F30%2F%E8%AE%B0%E4%BA%8B%E6%9C%AC%E6%92%AD%E6%94%BEBadapple%2F</url>
    <content type="text"><![CDATA[(效果如上，虽然编写的语言不同，但是效果是一样的。) 主要思路首先逐帧生成Badapple的字符画（当然，你也可以读入视频实时生成字符画，不过这种方法在这里不进行讨论。），保存为外部文件，软件启动时将字符画读入数组中，然后获取记事本的Hwnd，利用SendMessage函数向记事本发送读取的文本，即可达到播放视频的效果。 文件创建我们首先创建个CPP文件，头文件使用以下文件。12345#include &lt;iostream&gt; #include &lt;windows.h&gt;#include &lt;mmsystem.h&gt;#include &lt;fstream&gt;#include &lt;string&gt; 声明变量，主函数我们开始正式写代码，首先声明变量，主函数。1234567891011#include &lt;iostream&gt; #include &lt;windows.h&gt;#include &lt;mmsystem.h&gt;#include &lt;fstream&gt;#include &lt;string&gt;using namespace std;string BAtext[106600] ;//共3553帧bool readBadApple() ;//声明函数int main()&#123; &#125; 读入文件声明完后，就需要来读入字符画文件了（字符画文件将在文末提供下载）。1234567891011121314151617181920//读取文本数据 bool readBadApple()&#123; string line;//每一行文本 int count; //行数 ifstream in(&quot;g:\\Bad apple data.txt&quot;);//读入文本 &quot;g:\\Bad apple data.txt&quot;为文本文件所在路径 if (in) //是否读取成功 &#123; while(getline(in,line))//循环读取 &#123; BAtext [count] = line ; )//给数组赋值 count++; //行数增加 &#125; &#125; else &#123; return false;//如读取失败则返回false &#125; &#125; 这样写，就可以读取外部文本的数据了。 获取HWND接下来，我们来获取HWND，如下。1234567891011121314151617int main()&#123; SetConsoleTitle(&quot;BadApple Please wait...&quot;); if(!readBadApple()) return 0;//如果读取失败则直接返回 reset_hwnd://重置Hwnd int iHwnd; HWND mHwnd; //-----等待输入 Hwnd SetConsoleTitle(&quot;BadApple Wait Hwnd...&quot;); cout&lt;&lt;&quot;Hwnd：&quot;; cin&gt;&gt;iHwnd;//输入Hwnd mHwnd= (HWND)iHwnd;//将整数的Hwnd转换为HWND型 if(!IsWindow(mHwnd))//判断是否有效窗口句柄 &#123; cout&lt;&lt;&quot;Hwnd错误&quot;&lt;&lt;endl; goto reset_hwnd; //错误则跳转到reset_hwnd &#125; 播放确认获取完Hwnd，肯定不能立即开始播放，所以我们来加个输入Y后运行的代码。123456SetConsoleTitle(&quot;BadApple Wait...&quot;);//-----等待输入 Ycout&lt;&lt;&quot;Run [Y]：&quot;;char input;cin&gt;&gt;input; if(input != &apos;Y&apos;) return 0;//如果输入的不是Y直接返回 加入这段代码即可实现。 信息发送最后就是播放了，我们要把每行的文本混合为一帧，然后调用SendMessage来实现把文本发送到记事本上。在刚才的基础上加入如下代码。12345678910111213141516171819 //-----开始运行 cout&lt;&lt;&quot;开始！&quot;&lt;&lt;endl;//开始输出字符画 sndPlaySound (&quot;g:\\BadApple.wav&quot;, SND_ASYNC | SND_NODEFAULT);//歌曲文件路径 SND_ASYNC异步 SND_SYNC同步 string frame;SetConsoleTitle(&quot;BadApple Playing...&quot;);for (int a=0; a&lt;3553; a=a+1)//共输出3553帧 &#123; frame = &quot;&quot;; for (int countk=0; countk&lt;30; countk=countk+1)//30行为一帧 所以要把30行的文本组合为一帧 然后输出 &#123; frame = frame + BAtext [a*30+countk] + &quot;\n&quot; ;//组合文本 &#125; SendMessageA (mHwnd, 12, (WPARAM) 0, LPARAM(temp.c_str()));//发送信息 输出一帧的文本 Sleep(55);//每帧延时 如果音频快了则把延时调低 慢了反之 &#125;//-----结束运行SetConsoleTitle(&quot;BadApple End&quot;);cout&lt;&lt;&quot;End&quot;;return 0; 代码已经写好了，点击运行观看效果吧！ 附1 完整代码：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071#include &lt;iostream&gt; #include &lt;windows.h&gt;#include &lt;mmsystem.h&gt;#include &lt;fstream&gt;#include &lt;string&gt;using namespace std;string BAtext[106600] ;//106590/30=3553bool readBadApple() ;//定义函数int main()&#123; SetConsoleTitle(&quot;BadApple Please wait...&quot;); if(!readBadApple()) return 0;//如果读取失败则直接返回 reset_hwnd://重置Hwnd int iHwnd; HWND mHwnd; //-----等待输入 Hwnd SetConsoleTitle(&quot;BadApple Wait Hwnd...&quot;); cout&lt;&lt;&quot;Hwnd：&quot;; cin&gt;&gt;iHwnd;//输入Hwnd mHwnd= (HWND)iHwnd;//将整数的Hwnd转换为HWND型 if(!IsWindow(mHwnd))//判断是否有效窗口句柄 &#123; cout&lt;&lt;&quot;Hwnd错误&quot;&lt;&lt;endl; goto reset_hwnd; //错误则跳转到reset_hwnd &#125; SetConsoleTitle(&quot;BadApple Wait...&quot;); //-----等待输入 Y cout&lt;&lt;&quot;Run [Y]：&quot;; char input; cin&gt;&gt;input; if(input != &apos;Y&apos;) return 0;//如果输入的不是Y直接返回 //-----开始运行 cout&lt;&lt;&quot;开始！&quot;&lt;&lt;endl;//开始输出字符画 sndPlaySound (&quot;g:\\BadApple.wav&quot;, SND_ASYNC | SND_NODEFAULT);//歌曲文件路径 SND_ASYNC异步 SND_SYNC同步 string frame; SetConsoleTitle(&quot;BadApple Playing...&quot;); for (int a=0; a&lt;3553; a=a+1)//共输出3553帧 &#123; frame = &quot;&quot;; for (int countk=0; countk&lt;30; countk=countk+1)//30行为一帧 所以要把30行的文本组合为一帧 然后输出 &#123; frame = frame + BAtext [a*30+countk] + &quot;\n&quot; ;//组合文本 &#125; SendMessageA (mHwnd, 12, (WPARAM) 0, LPARAM(temp.c_str()));//发送信息 输出一帧的文本 Sleep(55);//每帧延时 如果音频快了则把延时调低 慢了反之 &#125; //-----结束运行 SetConsoleTitle(&quot;BadApple End&quot;); cout&lt;&lt;&quot;End&quot;; return 0; &#125;//读取文本数据 bool readBadApple()&#123; string line;//每一行文本 int count; //行数 ifstream in(&quot;g:\\Bad apple data.txt&quot;);//读入文本 &quot;g:\\Bad apple data.txt&quot;为文本文件所在路径 if (in) //是否读取成功 &#123; while(getline(in,line))//循环读取 &#123; BAtext [count] = line ; )//给数组赋值 count++; //行数增加 &#125; &#125; else &#123; return false;//如读取失败则返回false &#125; &#125; 附2 字符画下载下载 提取码: 2333 你也可以访问 Git库 得到所有文件]]></content>
      <categories>
        <category>C++</category>
      </categories>
      <tags>
        <tag>装逼</tag>
      </tags>
  </entry>
</search>
